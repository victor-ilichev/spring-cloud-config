example.property: I AM THE DEFAULT

server:
    port: 8087

signing:
    key: "345345fsdfsf5345"

logstash:
    host: logstash:5000
    hostWithoutPort: logstash
    port: 5000
    isEnabled: false

logging:
    config: classpath:logback-delayed.xml

logger:
    debug_level: "debug"

spring:
    jpa:
        hibernate:
            ddl-auto: none
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        database: POSTGRESQL
        show-sql: true
        properties:
            hibernate:
                dialect: org.hibernate.dialect.PostgreSQLDialect
    database:
        driverClassName: org.postgresql.Driver
    datasource:
        platform: postgres
        testWhileIdle: true
        validationQuery: SELECT 1
    cloud:
        loadbalancer:
            ribbon:
                enabled: false
        stream:
            bindings:
                inboundOrgChanges:
                    destination: orgChangeTopic
                    content-type: application/json
                    group: licensingGroup
            kafka:
                binder:
                    zkNodes:
                        - kafka
                    brokers:
                        - kafka
    zipkin:
        baseUrl: http://zipkin:9411
    sleuth:
        sampler:
            percentage: 1

management:
    endpoints:
        web:
            exposure.include: "*"
        enabled-by-default: true

eureka:
    isEnabled: false
    client:
        registerWithEureka: true
        fetchRegistry: true
        serviceUrl:
            defaultZone: http://eurekaserver:8070/eureka/
    instance:
        api:
            port: 80
        preferIpAddress: true

security:
    oauth2:
        resource.userInfoUri: http://authenticationservice:8082/user
        client.grant-type: client_credentials

redis:
    server: redis
    port: 6379

keycloak:
    realm: spmia-realm
    auth-server-url: http://keycloak:8080/auth
    ssl-required: external
    resource: ostock
    credentials.secret: 11764029-3707-4985-805d-df26d1d2bbeb
    use-resource-role-mappings: true
    bearer-only: true

dream:
    instance:
        config_name: I AM THE DEFAULT
        bss:
            url: http://bss.dev.dreamcamtrue.com:8600
        kafka:
            bootstrap_servers: kaf1-metallb.px1-wlzone.dreamcamtrue.com:9094
            sasl_mechanism: SCRAM-SHA-256
            security_protocol: SASL_PLAINTEXT
            username: user1
            password: TpjstVcGeX
            topics: []
            max_retry: 5
            is_enabled: false
            producer:
                group: streamNodeGroup
            consumer:
                group: streamNodeGroup
        api:
            schema: http
            host: 0.0.0.0
            port: 80
            read_timeout: 12
            write_timeout: 12
            keepalive: true
            cert:
            key:
            connectInfoEndpoint:

stream_manager_client:
    manager:
        url: http://gateway:8072/ds-stream-manager
    api:
        host: 127.0.0.1
        port: 85
        url: http://0.0.0.0:85
        urlWithoutSchema: 0.0.0.0:85
        httpReadTimeout: 10
        httpWriteTimeout: 10
        httpKeepalive: true
        cert: ""
        key: ""

stream_server:
    bss:
        url: http://bss.dev.dreamcamtrue.com:8600
        kafka:
            bootstrap_servers: kaf1-metallb.px1-wlzone.dreamcamtrue.com:9094
            auto_offset_reset: earliest
            sasl_mechanism: SCRAM-SHA-256
            security_protocol: SASL_PLAINTEXT
            username: user1
            password: TpjstVcGeX
            is_enabled: true
            client:
                id: stream-server-service
            topics: []
            max_retry: 5
            producer:
                group: streamBssGroup
            consumer:
                group: streamBssGroup
            passthroughTopic: passthroughTopic
    server:
        localDebugMode: false
        name: stream-d
        muxer:
            bufferSize: 300
            keyItWarn: 2
            maxFrames: 10
            buffer: 3000000
            audioSize: 4096
        reStream:
            request_duration: 30
    profiler:
        enable: false
        host: 0.0.0.0
        port: 6060
        urlWithoutSchema: 0.0.0.0:6060
    log:
        path: /proc/self/fd/2
        level: 4
        stdout: true
        tag: stream-dreamcam
    api:
        schema: http
        host: 0.0.0.0
        port: 1450
        urlWithoutSchema: 0.0.0.0:1450
        httpReadTimeout: 10
        httpWriteTimeout: 10
        httpKeepalive: true
        cert:
        key:
    rtmp:
        host: 0.0.0.0
        port: 11430
        urlWithoutSchema: 0.0.0.0:11430
        muxerBufferSize: 300
        maxGopCount: 2
        InitPath: ./fmp4/
        muxer:
            audioTimebase: 48000
            videoTimebase: 48000
    srt:
        host: 0.0.0.0
        port: 11530
        urlWithoutSchema: 0.0.0.0:11530
        muxerBufferSize: 300
        maxGopCount: 2
        InitPath: ./fmp4/
        muxer:
            audioTimebase: 48000
            videoTimebase: 48000
    hls:
        mode: 0
        buffer: 2
        initialDuration: 2
        fragmentLength: 500
        minSegmentsNum: 10
        viewerWaiting: 2s
        needCORSHeaders: false
        muxerBufferSize: 300
        maxGopCount: 2
        filesPath: ./fmp4/hls/
    mp4:
        muxerBufferSize: 300
        maxGopCount: 2
    socket:
        host: 0.0.0.0
        port: 1444
        writeDeadLine: 2
        keyframeStart: true
        pullTimeout: 2
        chanSize: 200
        servers:
            - ws://0.0.0.0:1444
        pushDump:
            enable: false
            dir: /dev/shm
    rating_server:
        url: http://rating_server.hz
        is_enabled: false
    manager_client:
        urlWithoutSchema: 0.0.0.0:1460
    stream_manager:
        node_info:
            region: europe
            type: server
            name: europe
            host: europe
    snap:
        interval: 1m30s
        allowedOnErrorRetries: -1
    streamDecoderAPI:
        host: http://localhost/
